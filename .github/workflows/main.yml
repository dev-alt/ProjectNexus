name: ProjectNexus CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ... previous jobs remain the same ...

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace
          passphrase: ${{ secrets.SSH_KEY_PASSPHRASE }}

      - name: Deploy to Ubuntu Server
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        run: |
          # Create directories
          ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "mkdir -p ~/projectnexus/{backend,frontend/.next}"
          
          # Copy artifacts
          scp -o StrictHostKeyChecking=no backend/projectnexus-api $DEPLOY_USER@$DEPLOY_HOST:~/projectnexus/backend/
          scp -o StrictHostKeyChecking=no -r frontend/.next/* $DEPLOY_USER@$DEPLOY_HOST:~/projectnexus/frontend/.next/
          scp -o StrictHostKeyChecking=no frontend/package*.json $DEPLOY_USER@$DEPLOY_HOST:~/projectnexus/frontend/
          
          # Deploy
          ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
            set -e
            chmod +x ~/projectnexus/backend/projectnexus-api
            cd ~/projectnexus/frontend
            npm ci --production
          
            # Update environment
            echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" > .env
          
            # Restart services
            cd ~/projectnexus
            docker compose down
            docker compose build --no-cache
            docker compose up -d
          EOF