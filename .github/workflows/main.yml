name: ProjectNexus CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:7
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: testpassword
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v4
      - name: Wait for MongoDB
        run: |
          echo "Waiting for MongoDB to start..."
          sleep 30

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
      
      # Build backend
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build Backend
        working-directory: ./backend
        run: |
          go mod download
          CGO_ENABLED=0 GOOS=linux go build -o projectnexus-api ./cmd/api
      
      # Build frontend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          npm ci
          ls -la

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          npm run build
          ls -la
          ls -la .next || echo ".next directory not found"
      
      # Upload artifacts
      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/projectnexus-api
          retention-days: 1

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: |
            frontend/.next/**/*
            frontend/package.json
            frontend/package-lock.json
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: ./backend-build

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./frontend-build

      - name: Debug Local Files
        run: |
          pwd
          echo "Current directory structure:"
          find . -type f
          echo "Backend files:"
          ls -la backend-build/
          echo "Frontend files:"
          ls -la frontend-build/

      - name: Deploy to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          source: "backend-build/projectnexus-api,frontend-build/"
          target: "~/projectnexus/temp/"
          strip_components: 1

      - name: Setup and Start Services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          script_stop: true
          script: |
            echo "Setting up project structure..."
            mkdir -p ~/projectnexus/{backend,frontend/.next}
            
            echo "Moving backend files..."
            mv ~/projectnexus/temp/projectnexus-api ~/projectnexus/backend/
            chmod +x ~/projectnexus/backend/projectnexus-api
            
            echo "Moving frontend files..."
            mv ~/projectnexus/temp/.next/* ~/projectnexus/frontend/.next/
            mv ~/projectnexus/temp/package*.json ~/projectnexus/frontend/
            
            echo "Cleaning up temp directory..."
            rm -rf ~/projectnexus/temp
            
            echo "Installing frontend dependencies..."
            cd ~/projectnexus/frontend
            npm ci --production
            
            echo "Updating environment variables..."
            echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" > .env
            
            echo "Restarting services..."
            cd ~/projectnexus
            docker compose down
            docker compose build --no-cache
            docker compose up -d