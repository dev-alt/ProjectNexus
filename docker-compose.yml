services:
  frontend:
    image: projectnexus-frontend:latest
    ports:
      - "3050:3050"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    networks:
      - projectnexus-network

  backend:
    image: projectnexus-backend:latest
    container_name: projectnexus_backend
    ports:
      - "8085:8085"
    environment:
      - MONGODB_URI=mongodb://projectnexus:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/projectnexus?authSource=projectnexus
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis:6479
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - projectnexus-network
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: projectnexus_mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=projectnexus
    volumes:
      - mongodb_data:/data/db:rw
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - projectnexus-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://root:${MONGO_INITDB_ROOT_PASSWORD}@localhost:27017/admin?authSource=admin --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    command: ["--auth"]
    restart: unless-stopped

  redis: 
    image: redis:alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - projectnexus-network

networks:
  projectnexus-network:
    name: projectnexus_network
    driver: bridge

volumes:
  mongodb_data:
    name: projectnexus_mongodb_data
    driver: local
  redis_data:
    driver: local